###################
#### README #######
###################

---------------
## crab step
---------------

- Configurations using multicrab are in: UserCode/ICHiggsTauTau/test/higgsinvcrab
- edit crab_* and default_crab_* to adapt paths to python config, options, output directories etc...
- multicrab -cfg <crab_data.cfg>  -create -submit all
- mutlicrab -status, -getoutput, -report ...
- to make filelists to run analysis: go to analysis directory, and execute:
./scripts/filelist_from_crab.sh <crabdir>



---------------
## to compile
---------------

make -j 5
### to clean: 
make clean; cd ../; make clean; cd -

--------------------------------------------
## Before running: need symbolic links to data
## that are in common with HiggsTauTau:
---------------------------------------------

cd data
ln -s ../../HiggsTauTau/data/jec/ .
ln -s ../../HiggsTauTau/data/json/ .
ln -s ../../HiggsTauTau/data/pileup/ .
ln -s ../../HiggsTauTau/data/met_laser_filters/ .

--------------------------------------------
## Also we need a symbolic link to the correct params file
--------------------------------------------
cd scripts
ln -s ../filelists/CURRENTSAMPLE/ParamsCURRENTSAMPLE Params.dat


------------------------------------------------------
## to run the ntuple->root file with histograms steps:
------------------------------------------------------

### add lib to environment:
source scripts/setup_libs.sh

### General configuration parameters set in:
#### scripts/DefaultConfig.cfg for the data
#### scripts/DefaultConfigMC.cfg for the MC

### To run interactively first to test:
./bin/HiggsNuNu --cfg=scripts/DefaultConfigMC.cfg --max_events=1000

### Submit scripts with loop over parameters
### !! WARNING !! Edit before running, to set 
### the loops over MET, DOQCD, channel only to what 
### you want to run.
./scripts/submit_data.sh
./scripts/submit_mc.sh

### to submit only wjets sample: 
./scripts/submit_wjets.sh

### To check that the jobs are running
qstat

### Outputs: 
#### root files in output/CHANNEL/METXX/DOQCDXX/
#### log files in jobs/CHANNEL/METXX/DOQCDXX/*.log
#### can resubmit one job using the prepared script in
./scripts/submit_ic_batch_job.sh hepmedium.q jobs/CHANNEL/METXX/DOQCDXX/SAMPLE.sh
 
### Once all jobs are finished, to check they succeeded
### !! WARNING !! Edit before running, to set 
### the loops over MET, DOQCD, channel only to what 
### you want to run.
./scripts/checkOutputs.sh

### option to do only one directory rather than loop:
./scripts/checkOutputs.sh -d jobs/nunu/MET130/DOQCD0/

------------------------------------------
## to run the plots and tables of numbers:
------------------------------------------

### General configuration parameters set in:
#### scripts/controlPlot.cfg

### Cross sections and number of events set in:
#### scripts/Params.dat

### Scripts to run:
### !! WARNING !! Edit before running, to set 
### the loops over MET, DOQCD, channel only to what 
### you want to run.
#### all control plots from HinvControlPlots class
./scripts/controlPlot.sh 
#### n_jets and dphijj plots + summary tables
./scripts/controlPlotTables.sh
#### all WJets plots for HinvWJetsPlots class
./scripts/wjetsPlots.sh

### Outputs:
#### Plots in PLOTS/CHANNEL/METXX/DOQCDXX/
#### Tables and n_jets + dphi plots in TABLES/CHANNEL/METXX/DOQCDXX/

--------------------------------------------------
## to compute the WJets estimates and other things
--------------------------------------------------

### This assumes that at least the working points with
### MET=130, DOQCD=0,1,2 and channels nunu, enu and munu
### have been run before...

### make tables with numbers in latex format
cd macros/
root extractWJetsBkg.C++
#root > .q

### make some slides reading the tables above
pdflatex MakeTexSummary.tex



--------------------------------------------------
## To run TMVA
--------------------------------------------------
## Prepare input tree with variables needed
#### tree code is in class TmvaInputs
#### run bin/HiggsNuNu enabling the options --dolumixsweight=true --doTmvaTree=true

## Run training and testing
#### Example code is in test/RunTmva.cpp
#### To look at output file produced, use TMVAGui.C macro from root/tmva/test directory.
#### This is what is producing the performance plots.

## Apply to other samples, use in analysis
#### Example code is in test/ApplyTmva.cpp
